/**
 * Main stylesheet for the Foxer theme.
 *
 * Theme styles follow http://cssguidelin.es/ and are organized according to
 * Inverted Triangle CSS (ITCSS) principles put forth by Harry Roberts. In
 * short, each layer of CSS gets more specific as you move down this page.
 */
/*--------------------------------------------------------------
# Settings - Global variables, config switches.
--------------------------------------------------------------*/
/* stylelint-disable declaration-bang-space-before */
/* stylelint-enable */
/*--------------------------------------------------------------
# Tools - Default mixins and functions.
--------------------------------------------------------------*/
/*--------------------------------------------------------------
# Generic - Ground-zero styles (resets, box-sizing, etc.).
--------------------------------------------------------------*/
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/*--------------------------------------------------------------
# Elements - Unclassed HTML elements (type selectors).
--------------------------------------------------------------*/
html {
  color: #21183c;
  font-family: "Lato", sans-serif;
  font-size: 100%;
  line-height: 1.5;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

body {
  background: #fff;
}

p {
  margin: 0 0 1.5rem;
}

blockquote {
  font-size: 1.25rem;
  line-height: 1.6;
  border-left: 0.25rem solid;
  font-style: italic;
  margin: 0 0 1.5rem;
  padding-left: 1.5rem;
}

blockquote p:last-child {
  margin-bottom: 0;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  background-color: #21183c;
  border: none;
  color: #fff;
  padding: 0.5rem 1rem;
}

button:hover, button:active, button:focus,
input[type="button"]:hover,
input[type="button"]:active,
input[type="button"]:focus,
input[type="reset"]:hover,
input[type="reset"]:active,
input[type="reset"]:focus,
input[type="submit"]:hover,
input[type="submit"]:active,
input[type="submit"]:focus {
  background-color: #794acf;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea,
select {
  border: 2px solid #a779e9;
  padding: calc($global-spacing-unit - 2px);
  width: 100%;
}

textarea {
  display: block;
  min-height: 6.5rem;
}

label {
  display: block;
  font-weight: 700;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Fira Sans", sans-serif;
  margin: 0 0 1rem;
}

h1 {
  font-size: 2.5rem;
  line-height: 1.2;
}

h2 {
  font-size: 2rem;
  line-height: 1.25;
}

h3 {
  font-size: 1.5rem;
  line-height: 1.3333333333;
}

h4 {
  font-size: 1.25rem;
  line-height: 1.6;
}

h5 {
  font-size: 1.125rem;
  line-height: 1.7777777778;
}

h6 {
  font-size: 1rem;
  line-height: 1.5;
}

hr {
  display: block;
  margin-left: auto;
  margin-right: auto;
  background-color: #d6bbfc;
  border: 0;
  height: 0.25rem;
  margin-bottom: 2.5rem;
  margin-top: 2.5rem;
  max-width: 6.5rem;
}

a {
  color: #382b5f;
}

a:visited, a:hover, a:focus, a:active {
  color: #382b5f;
}

a:focus {
  outline: thin dotted;
}

a:hover, a:active {
  outline: 0;
}

ul,
ol {
  margin: 0 0 1.5rem 1rem;
  padding: 0;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 1rem;
  padding-left: 1rem;
}

dt {
  font-weight: 700;
}

dd {
  margin: 0 1.5rem 1.5rem;
}

embed,
iframe,
object {
  max-width: 100%;
}

img {
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}

figure {
  margin: 0 0 1.5rem;
}

figure img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

figcaption {
  font-size: 0.875rem;
  line-height: 1.4285714286;
  margin-bottom: 0.5rem;
  margin-top: 0.5rem;
  text-align: center;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

address {
  margin: 0 0 1.5rem;
}

abbr,
abbr[title],
acronym {
  border-bottom: none;
  cursor: help;
  text-decoration: underline dotted;
}

mark,
ins {
  background-color: #f3ebff;
  text-decoration: none;
}

big {
  font-size: 134%;
}

pre {
  font-size: 1.125rem;
  line-height: 1.7777777778;
  background-color: #f3ebff;
  font-family: "Courier 10 Pitch", "Courier", monospace;
  margin: 0 0 1.5rem;
  max-width: 100%;
  overflow: auto;
  padding: 1.5rem;
}

code,
kbd,
tt,
var {
  font-family: "Monaco", "Consolas", "Andale Mono", "DejaVu Sans Mono", monospace;
}

table {
  border-collapse: separate;
  border-spacing: 0;
  margin: 0 0 1rem;
  table-layout: fixed;
  width: 100%;
}

tr:nth-child(even) {
  background-color: #f3ebff;
}

th,
td {
  padding: 0.5rem;
  text-align: left;
}

/*--------------------------------------------------------------
# Components - specific UI components.
--------------------------------------------------------------*/
.comment-content a {
  word-wrap: break-word;
}

.bypostauthor {
  display: block;
}

.gallery {
  margin-bottom: 1.5em;
}

.gallery-item {
  display: inline-block;
  text-align: center;
  vertical-align: top;
  width: 100%;
}

.gallery-columns-2 .gallery-item {
  max-width: 50%;
}

.gallery-columns-3 .gallery-item {
  max-width: 33.33%;
}

.gallery-columns-4 .gallery-item {
  max-width: 25%;
}

.gallery-columns-5 .gallery-item {
  max-width: 20%;
}

.gallery-columns-6 .gallery-item {
  max-width: 16.66%;
}

.gallery-columns-7 .gallery-item {
  max-width: 14.28%;
}

.gallery-columns-8 .gallery-item {
  max-width: 12.5%;
}

.gallery-columns-9 .gallery-item {
  max-width: 11.11%;
}

.gallery-caption {
  display: block;
}

.wp-smiley,
.emoji {
  background: none;
  border: none;
  box-shadow: none;
  display: inline-block;
  margin: 0 0.07em;
  max-height: 1em;
  padding: 0;
  vertical-align: -0.1em;
  width: 1em;
}

.custom-logo-link {
  display: inline-block;
}

.menu ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.menu__items {
  display: none;
}

.menu__items.is-toggled {
  display: block;
}

.menu__anchor {
  display: block;
  text-decoration: none;
}

.menu__anchor .icon {
  display: none;
}

.no-js .menu-toggle {
  display: none;
}

.no-js .menu__items {
  display: block;
}

.sticky {
  display: block;
}

.updated:not(.published) {
  display: none;
}

.entry,
.page-content,
.entry-content,
.entry-summary,
.page-links {
  margin: 0 0 1.5rem;
}

.widget {
  margin: 0 0 1.5rem;
}

.widget select {
  max-width: 100%;
}

/*--------------------------------------------------------------
# Utilities - Helpers and overrides.
--------------------------------------------------------------*/
/* stylelint-disable declaration-no-important */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
}

.screen-reader-text:focus {
  font-size: 0.875;
  line-height: 1.7142857143;
  background-color: #21183c;
  clip: auto !important;
  -webkit-clip-path: none;
          clip-path: none;
  color: #fff;
  display: block;
  font-weight: 700;
  height: auto;
  left: 0.5rem;
  padding: 0.5rem 1rem;
  text-decoration: none;
  top: 0.5rem;
  width: auto;
  z-index: 100000;
}

/* stylelint-enable */
#main[tabindex="-1"]:focus {
  outline: 0;
}

.alignleft {
  float: left;
  margin-bottom: 1.5rem;
  margin-right: 1.5rem;
}

.alignright {
  float: right;
  margin-bottom: 1.5rem;
  margin-left: 1.5rem;
}

.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
  clear: both;
}

.icon {
  display: inline-block;
  fill: currentColor;
  height: 1em;
  position: relative;
  top: -0.0625em;
  vertical-align: middle;
  width: 1em;
}

@media screen and (min-width: 42.5em) {
  .menu-toggle {
    display: none;
  }
  .menu__item {
    position: relative;
  }
  .menu__items, .menu__items.is-toggled {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .menu__items > li:not(:last-child) {
    margin-right: 1.5rem;
  }
  .menu__items ul {
    background-color: #f3ebff;
    left: -999em;
    position: absolute;
    top: 100%;
    width: 13rem;
    z-index: 99999;
  }
  .menu__items ul li:hover > ul,
  .menu__items ul .focus > ul {
    left: 100%;
    right: auto;
  }
  .menu__items ul a {
    padding: 0.5rem 1rem;
  }
  .menu__items ul ul {
    top: 0;
  }
  .menu__items ul .icon {
    position: absolute;
    right: 1rem;
    top: calc(50% - 0.5em);
    transform: rotate(-90deg);
  }
  .menu__items li:hover > ul,
  .menu__items .focus > ul {
    left: 0;
  }
  .menu__anchor .icon {
    display: inline-block;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
